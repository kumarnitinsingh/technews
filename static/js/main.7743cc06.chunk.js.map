{"version":3,"sources":["serviceWorker.js","Components/Card.js","Components/CardList.js","Components/Card1.js","Components/CardList1.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","id","name","author","title","description","url","urlToImage","publishedAt","content","className","alt","src","href","CardList","articles","map","news","i","key","source","Card1","CardList1","articles1","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","Promise","all","fetch","then","res1","res2","json","filteredNews","filter","toLowerCase","includes","filteredNews1","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7743cc06.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst Card= ({id,name,author,title,description,url,urlToImage,publishedAt,content}) => {\r\n\t\r\nreturn(\r\n\r\n\t<div className=' tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t<img alt='newsImage' src={urlToImage}/>\r\n\t<div>\r\n\t\t<h2>{name} by {author}</h2>\r\n\t\t<h3>{title}</h3>\r\n\t\t<h4>{publishedAt}</h4>\r\n\t\t<p>{description}</p>\r\n\t\t<p>{content}</p>\r\n\t\t<a href={url}>view full</a>\r\n\t</div>\r\n    \r\n\r\n\t</div>\r\n);\r\n\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({articles})=>{\r\n\treturn(\r\n\t\t<div>\r\n\t{articles.map((news,i)=>{\r\n\t\treturn (\r\n\t\t\t<Card\r\n\t\t\t key={i}\r\n\t\t\t  id ={articles[i].source.id}\r\n\t\t\t   name ={articles[i].source.name}\r\n\t\t\t    author={articles[i].author}\r\n\t\t\t    title={articles[i].title}\r\n\t\t\t    url={articles[i].url}\r\n\t\t\t    urlToImage={articles[i].urlToImage}\r\n\t\t\t    publishedAt={articles[i].publishedAt}\r\n\t\t\t    content={articles[i].content}\r\n\t\t\t    description={articles[i].description}\r\n\t\t\t    />\r\n\t\t\t);\r\n\t})\r\n\t\r\n}\r\n\r\n</div>\r\n);\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Card1= ({id,name,author,title,description,url,urlToImage,publishedAt,content}) => {\r\n\t\r\nreturn(\r\n\r\n\t<div className=' tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t<img alt='newsImage' src={urlToImage}/>\r\n\t<div>\r\n\t\t<h2>{name} by {author}</h2>\r\n\t\t<h3>{title}</h3>\r\n\t\t<h4>{publishedAt}</h4>\r\n\t\t<p>{description}</p>\r\n\t\t<p>{content}</p>\r\n\t\t<a href={url}>view full</a>\r\n\t</div>\r\n\r\n\r\n\t</div>\r\n);\r\n\r\n}\r\nexport default Card1;\r\n","import React from 'react';\r\nimport Card1 from './Card1'\r\n\r\nconst CardList1 =({articles1})=>{\r\n\treturn(\r\n\t\t<div>\r\n\t{articles1.map((news,i)=>{\r\n\t\treturn (\r\n\t\t\t<Card1\r\n\t\t\t key={i}\r\n\t\t\t  id ={articles1[i].source.id}\r\n\t\t\t   name ={articles1[i].source.name}\r\n\t\t\t    author={articles1[i].author}\r\n\t\t\t    title={articles1[i].title}\r\n\t\t\t    url={articles1[i].url}\r\n\t\t\t    urlToImage={articles1[i].urlToImage}\r\n\t\t\t    publishedAt={articles1[i].publishedAt}\r\n\t\t\t    content={articles1[i].content}\r\n\t\t\t    description={articles1[i].description}\r\n\t\t\t    />\r\n\t\t\t);\r\n\t})\r\n\t\r\n}\r\n\r\n</div>\r\n);\r\n}\r\n\r\n\r\nexport default CardList1;","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst SearchBox=({searchfield,searchChange})=>{\r\nreturn(\r\n<div className='pa2'>\r\n<input\r\nclassName ='pa3 ba b--green bg-lightest-blue' type='search' placeholder='search news'\r\nonChange={searchChange}\r\n\r\n\r\n/>\r\n\r\n \r\n               \r\n</div>\r\n\t);\r\n\r\n\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll=(props)=>{\r\n\treturn(\r\n\t\t<div style={{overflow:'scroll',border :'5px solid black',height:'800px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state={\r\n\t\t\thasError:false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error,info){\r\nthis.setState({hasError:true})\r\n\r\n\t}\r\nrender(){\r\n\tif(this.state.hasError){\r\n\r\n\r\n\treturn<h1>Ooops! sorry Try again later.</h1> \r\n}\r\nreturn this.props.children\r\n}\r\n\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React,{Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport CardList1 from '../Components/CardList1';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport'./App.css';\r\nimport ErrorBoundary from '../Components/ErrorBoundary'\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\tarticles:[],\r\n\t\t\tarticles1:[],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\ncomponentDidMount(){\r\n\r\n\r\nPromise.all([fetch('http://newsapi.org/v2/top-headlines?country=in&category=technology&apiKey=374e559cb5c74f888ef70ececa968ad1'),fetch('http://newsapi.org/v2/top-headlines?country=us&category=technology&apiKey=374e559cb5c74f888ef70ececa968ad1')])\r\n\t.then(([res1,res2])=>{\r\n\t\treturn Promise.all([res1.json(),res2.json()])\r\n\t})\r\n\t.then(([res1,res2])=>{\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tarticles:res1.articles,\r\n\t\t\tarticles1:res2.articles\r\n\r\n\t\t})\r\n\t\t\r\n\t})\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\t\r\n\t\r\n\r\nonSearchChange =(event)=>{\r\n\tthis.setState({searchfield:event.target.value})\r\n}\r\nrender(){\r\n\r\n\r\n\tconst filteredNews=this.state.articles.filter(articles=>{\r\n\t\treturn articles.source.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t})\r\n\r\n\r\n\tconst filteredNews1=this.state.articles1.filter(articles1=>{\r\n\t\treturn articles1.source.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t})\r\n\t\r\n\treturn(\r\n\t\t<div className='tc'>\r\n\t\t<h1 className='f1'>TECH HEADLINES</h1>\r\n\t\t\r\n\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t<Scroll>\r\n\t\t<ErrorBoundary>\r\n\t\t<h1 className='f3'>India's Tech News</h1>\r\n\t\t<CardList articles={filteredNews}/>\r\n\t\t<h1 className='f3'>USA's Tech News</h1>\r\n\t\t<CardList1 articles1={filteredNews1}/>\r\n\t\t</ErrorBoundary>\r\n\t\t</Scroll>\r\n\t\t<footer className='f3'>Powered by @<a href=\"https://www.linkedin.com/in/nitin-kumar-singh-a744511a8\">Nitin Kumar Singh</a></footer>\r\n\t\t</div>\r\n\r\n\t\t);\r\n\r\n}\t\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nimport App from './Containers/App.js';\n\nReactDOM.render(\n<App/> \n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}